{"title":"Base Case Behavior.","markdown":{"yaml":{"title":"Base Case Behavior.","author":"Giordano Rogers","date":"2025-01-02","categories":["programming","philosophy"],"image":"image.jpg"},"headingText":"Base Case Behavior","containsRefs":false,"markdown":"\n\nThe concept of base cases in inductive hypotheses are a good way to approach\nprogramming.\n\nAlways test the base case: the most simple version of what you're trying to \nachieve.\n\nYou want to build a wrapper around an api?\n\nMake the simplest possible api call first.\n\nYou want to build your own REST API to interact with your database?\n\nBuild one that prints a simple \"hello world\" response first.\n\nAlwasy start simple.\n\nAlways start with the base case.\n\nFrom there, you have a foundation to reason about the rest of the sequence.\n\nNow I have a frame.\n\nIf I add this one small next step, I can it again.\n\nI can keep iterating slowly through the sequence of events until I reach the \noutcome I'm looking for.\n\nBut now I'm not looking blindly.\n\nBase case programming is prototyping.\n\nBut unlike the concept of protoyping, the term base case programming emphasizes\ntwo important things. First, is simplicity. In mathematical reasoning, the base\ncase is always considered somewhat arbitrary, usually contained withing the\ndefinition of the proposition itself. \n\nConsider the following sequence:\n$$\nx_n = 2x_{n-1} + x_{n-2} \\quad \\text{for} \\quad n \\geq 3\n$$\n\nUse induction to prove that $a_{2n}$ is even for all integers $n \\ge 1$.\n\nWhen you first see a prolem like this, there's no clear way to reason about.\n\nNow, if I give you the start of the sequence, you can start to build up an intuition.\n\n$$\nx_1 = -1, \\quad x_2 = 0, \\quad x_n = 2x_{n-1} + x_{n-2} \\quad \\text{for} \\quad n \\geq 3\n$$\n\nThe way we'd prove the conjecture formally, is by starting with these base cases, and reasoning up.\n\n$$\nx_3 = 2(0) + (-1) = -1\nx_4 = 2(-1) + (0) = -2\nx_5 = 2(-2) + (-1) = -5\n$$\n\nBut to prove the statement generally, we don't have to show every step of the sequence.\n\nWe just have to show that the next step always follows the same pattern.\n\nAssume that $x_{2k}$ is even for some integer $k \\ge 1$. We can prove that $x_2(k+1)$ is even, because:\n\n$$\nx_{2(k+1)} = 2x_{2(k+1)-1} + x_{2(k+1)-2} = 2x_{k+1} + a_{2k}\n$$\n\nSince $a_{2k}$ is even, and $2a_{2k+1} must be even sice $a_{2K+1} \n\nIn this example, there\n\n\nThe base case is always ","srcMarkdownNoYaml":"\n# Base Case Behavior\n\nThe concept of base cases in inductive hypotheses are a good way to approach\nprogramming.\n\nAlways test the base case: the most simple version of what you're trying to \nachieve.\n\nYou want to build a wrapper around an api?\n\nMake the simplest possible api call first.\n\nYou want to build your own REST API to interact with your database?\n\nBuild one that prints a simple \"hello world\" response first.\n\nAlwasy start simple.\n\nAlways start with the base case.\n\nFrom there, you have a foundation to reason about the rest of the sequence.\n\nNow I have a frame.\n\nIf I add this one small next step, I can it again.\n\nI can keep iterating slowly through the sequence of events until I reach the \noutcome I'm looking for.\n\nBut now I'm not looking blindly.\n\nBase case programming is prototyping.\n\nBut unlike the concept of protoyping, the term base case programming emphasizes\ntwo important things. First, is simplicity. In mathematical reasoning, the base\ncase is always considered somewhat arbitrary, usually contained withing the\ndefinition of the proposition itself. \n\nConsider the following sequence:\n$$\nx_n = 2x_{n-1} + x_{n-2} \\quad \\text{for} \\quad n \\geq 3\n$$\n\nUse induction to prove that $a_{2n}$ is even for all integers $n \\ge 1$.\n\nWhen you first see a prolem like this, there's no clear way to reason about.\n\nNow, if I give you the start of the sequence, you can start to build up an intuition.\n\n$$\nx_1 = -1, \\quad x_2 = 0, \\quad x_n = 2x_{n-1} + x_{n-2} \\quad \\text{for} \\quad n \\geq 3\n$$\n\nThe way we'd prove the conjecture formally, is by starting with these base cases, and reasoning up.\n\n$$\nx_3 = 2(0) + (-1) = -1\nx_4 = 2(-1) + (0) = -2\nx_5 = 2(-2) + (-1) = -5\n$$\n\nBut to prove the statement generally, we don't have to show every step of the sequence.\n\nWe just have to show that the next step always follows the same pattern.\n\nAssume that $x_{2k}$ is even for some integer $k \\ge 1$. We can prove that $x_2(k+1)$ is even, because:\n\n$$\nx_{2(k+1)} = 2x_{2(k+1)-1} + x_{2(k+1)-2} = 2x_{k+1} + a_{2k}\n$$\n\nSince $a_{2k}$ is even, and $2a_{2k+1} must be even sice $a_{2K+1} \n\nIn this example, there\n\n\nThe base case is always "},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"highlight-style":"github-dark","output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.39","theme":["cyborg","../../custom.scss"],"fontsize":"1.3em","monofont":"Courier","title-block-banner":true,"title":"Base Case Behavior.","author":"Giordano Rogers","date":"2025-01-02","categories":["programming","philosophy"],"image":"image.jpg"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}